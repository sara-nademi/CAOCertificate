//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace CAOCertificate.BusinessObjects
{
    public partial class Request
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual int RequestTypeID
        {
            get { return _requestTypeID; }
            set
            {
                if (_requestTypeID != value)
                {
                    if (RequestTypeEntity != null && RequestTypeEntity.Id != value)
                    {
                        RequestTypeEntity = null;
                    }
                    _requestTypeID = value;
                }
            }
        }
        private int _requestTypeID;
    
        public virtual System.DateTime RequestDate
        {
            get;
            set;
        }
    
        public virtual bool IsActive
        {
            get { return _isActive; }
            set { _isActive = value; }
        }
        private bool _isActive = true;
    
        public virtual int CertificateID
        {
            get { return _certificateID; }
            set
            {
                if (_certificateID != value)
                {
                    if (CertificateEntity != null && CertificateEntity.Id != value)
                    {
                        CertificateEntity = null;
                    }
                    _certificateID = value;
                }
            }
        }
        private int _certificateID;
    
        public virtual int CompanyID
        {
            get { return _companyID; }
            set
            {
                if (_companyID != value)
                {
                    if (CompanyEntity != null && CompanyEntity.Id != value)
                    {
                        CompanyEntity = null;
                    }
                    _companyID = value;
                }
            }
        }
        private int _companyID;
    
        public virtual int ApplicantID
        {
            get { return _applicantID; }
            set
            {
                if (_applicantID != value)
                {
                    if (ApplicantEntity != null && ApplicantEntity.Id != value)
                    {
                        ApplicantEntity = null;
                    }
                    _applicantID = value;
                }
            }
        }
        private int _applicantID;
    
        public virtual string TrackCode
        {
            get;
            set;
        }
    
        public virtual int Status
        {
            get;
            set;
        }
    
        public virtual string InsertUserName
        {
            get;
            set;
        }
    
        public virtual System.DateTime InsertDate
        {
            get;
            set;
        }
    
        public virtual string UpdateUserName
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> UpdateDate
        {
            get;
            set;
        }
    
        public virtual Nullable<int> CertificateNumber
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual RequestType RequestTypeEntity
        {
            get { return _requestTypeEntity; }
            set
            {
                if (!ReferenceEquals(_requestTypeEntity, value))
                {
                    var previousValue = _requestTypeEntity;
                    _requestTypeEntity = value;
                    FixupRequestTypeEntity(previousValue);
                }
            }
        }
        private RequestType _requestTypeEntity;
    
        public virtual Certificate CertificateEntity
        {
            get { return _certificateEntity; }
            set
            {
                if (!ReferenceEquals(_certificateEntity, value))
                {
                    var previousValue = _certificateEntity;
                    _certificateEntity = value;
                    FixupCertificateEntity(previousValue);
                }
            }
        }
        private Certificate _certificateEntity;
    
        public virtual Person CompanyEntity
        {
            get { return _companyEntity; }
            set
            {
                if (!ReferenceEquals(_companyEntity, value))
                {
                    var previousValue = _companyEntity;
                    _companyEntity = value;
                    FixupCompanyEntity(previousValue);
                }
            }
        }
        private Person _companyEntity;
    
        public virtual Person ApplicantEntity
        {
            get { return _applicantEntity; }
            set
            {
                if (!ReferenceEquals(_applicantEntity, value))
                {
                    var previousValue = _applicantEntity;
                    _applicantEntity = value;
                    FixupApplicantEntity(previousValue);
                }
            }
        }
        private Person _applicantEntity;
    
        public virtual ICollection<Applicant_Certificate> Applicant_Certificates
        {
            get
            {
                if (_applicant_Certificates == null)
                {
                    var newCollection = new FixupCollection<Applicant_Certificate>();
                    newCollection.CollectionChanged += FixupApplicant_Certificates;
                    _applicant_Certificates = newCollection;
                }
                return _applicant_Certificates;
            }
            set
            {
                if (!ReferenceEquals(_applicant_Certificates, value))
                {
                    var previousValue = _applicant_Certificates as FixupCollection<Applicant_Certificate>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupApplicant_Certificates;
                    }
                    _applicant_Certificates = value;
                    var newValue = value as FixupCollection<Applicant_Certificate>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupApplicant_Certificates;
                    }
                }
            }
        }
        private ICollection<Applicant_Certificate> _applicant_Certificates;
    
        public virtual ICollection<EPaymentHistory> EPaymentHistories
        {
            get
            {
                if (_ePaymentHistories == null)
                {
                    var newCollection = new FixupCollection<EPaymentHistory>();
                    newCollection.CollectionChanged += FixupEPaymentHistories;
                    _ePaymentHistories = newCollection;
                }
                return _ePaymentHistories;
            }
            set
            {
                if (!ReferenceEquals(_ePaymentHistories, value))
                {
                    var previousValue = _ePaymentHistories as FixupCollection<EPaymentHistory>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupEPaymentHistories;
                    }
                    _ePaymentHistories = value;
                    var newValue = value as FixupCollection<EPaymentHistory>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupEPaymentHistories;
                    }
                }
            }
        }
        private ICollection<EPaymentHistory> _ePaymentHistories;
    
        public virtual ICollection<Seat> Seats
        {
            get
            {
                if (_seats == null)
                {
                    var newCollection = new FixupCollection<Seat>();
                    newCollection.CollectionChanged += FixupSeats;
                    _seats = newCollection;
                }
                return _seats;
            }
            set
            {
                if (!ReferenceEquals(_seats, value))
                {
                    var previousValue = _seats as FixupCollection<Seat>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSeats;
                    }
                    _seats = value;
                    var newValue = value as FixupCollection<Seat>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSeats;
                    }
                }
            }
        }
        private ICollection<Seat> _seats;

        #endregion
        #region Association Fixup
    
        private void FixupRequestTypeEntity(RequestType previousValue)
        {
            if (previousValue != null && previousValue.Requests.Contains(this))
            {
                previousValue.Requests.Remove(this);
            }
    
            if (RequestTypeEntity != null)
            {
                if (!RequestTypeEntity.Requests.Contains(this))
                {
                    RequestTypeEntity.Requests.Add(this);
                }
                if (RequestTypeID != RequestTypeEntity.Id)
                {
                    RequestTypeID = RequestTypeEntity.Id;
                }
            }
        }
    
        private void FixupCertificateEntity(Certificate previousValue)
        {
            if (previousValue != null && previousValue.Requests.Contains(this))
            {
                previousValue.Requests.Remove(this);
            }
    
            if (CertificateEntity != null)
            {
                if (!CertificateEntity.Requests.Contains(this))
                {
                    CertificateEntity.Requests.Add(this);
                }
                if (CertificateID != CertificateEntity.Id)
                {
                    CertificateID = CertificateEntity.Id;
                }
            }
        }
    
        private void FixupCompanyEntity(Person previousValue)
        {
            if (previousValue != null && previousValue.CompanyRequests.Contains(this))
            {
                previousValue.CompanyRequests.Remove(this);
            }
    
            if (CompanyEntity != null)
            {
                if (!CompanyEntity.CompanyRequests.Contains(this))
                {
                    CompanyEntity.CompanyRequests.Add(this);
                }
                if (CompanyID != CompanyEntity.Id)
                {
                    CompanyID = CompanyEntity.Id;
                }
            }
        }
    
        private void FixupApplicantEntity(Person previousValue)
        {
            if (previousValue != null && previousValue.ApplicantRequests.Contains(this))
            {
                previousValue.ApplicantRequests.Remove(this);
            }
    
            if (ApplicantEntity != null)
            {
                if (!ApplicantEntity.ApplicantRequests.Contains(this))
                {
                    ApplicantEntity.ApplicantRequests.Add(this);
                }
                if (ApplicantID != ApplicantEntity.Id)
                {
                    ApplicantID = ApplicantEntity.Id;
                }
            }
        }
    
        private void FixupApplicant_Certificates(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Applicant_Certificate item in e.NewItems)
                {
                    item.RequestEntity = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Applicant_Certificate item in e.OldItems)
                {
                    if (ReferenceEquals(item.RequestEntity, this))
                    {
                        item.RequestEntity = null;
                    }
                }
            }
        }
    
        private void FixupEPaymentHistories(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (EPaymentHistory item in e.NewItems)
                {
                    item.RequestEntity = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (EPaymentHistory item in e.OldItems)
                {
                    if (ReferenceEquals(item.RequestEntity, this))
                    {
                        item.RequestEntity = null;
                    }
                }
            }
        }
    
        private void FixupSeats(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Seat item in e.NewItems)
                {
                    item.RequestEntity = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Seat item in e.OldItems)
                {
                    if (ReferenceEquals(item.RequestEntity, this))
                    {
                        item.RequestEntity = null;
                    }
                }
            }
        }

        #endregion
    }
}
