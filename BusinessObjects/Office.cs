//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace CAOCertificate.BusinessObjects
{
    public partial class Office
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual int DoctorID
        {
            get { return _doctorID; }
            set
            {
                if (_doctorID != value)
                {
                    if (DoctorEntity != null && DoctorEntity.Id != value)
                    {
                        DoctorEntity = null;
                    }
                    _doctorID = value;
                }
            }
        }
        private int _doctorID;
    
        public virtual string Schedule
        {
            get;
            set;
        }
    
        public virtual string Address
        {
            get;
            set;
        }
    
        public virtual string Tel
        {
            get;
            set;
        }
    
        public virtual string InsertUserName
        {
            get;
            set;
        }
    
        public virtual System.DateTime InsertDate
        {
            get;
            set;
        }
    
        public virtual string UpdateUserName
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> UpdateDate
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual Doctor DoctorEntity
        {
            get { return _doctorEntity; }
            set
            {
                if (!ReferenceEquals(_doctorEntity, value))
                {
                    var previousValue = _doctorEntity;
                    _doctorEntity = value;
                    FixupDoctorEntity(previousValue);
                }
            }
        }
        private Doctor _doctorEntity;

        #endregion
        #region Association Fixup
    
        private void FixupDoctorEntity(Doctor previousValue)
        {
            if (previousValue != null && previousValue.Offices.Contains(this))
            {
                previousValue.Offices.Remove(this);
            }
    
            if (DoctorEntity != null)
            {
                if (!DoctorEntity.Offices.Contains(this))
                {
                    DoctorEntity.Offices.Add(this);
                }
                if (DoctorID != DoctorEntity.Id)
                {
                    DoctorID = DoctorEntity.Id;
                }
            }
        }

        #endregion
    }
}
