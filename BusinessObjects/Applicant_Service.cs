//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace CAOCertificate.BusinessObjects
{
    public partial class Applicant_Service
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual int ApplicantID
        {
            get { return _applicantID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_applicantID != value)
                    {
                        if (ApplicantEntity != null && ApplicantEntity.Id != value)
                        {
                            ApplicantEntity = null;
                        }
                        _applicantID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _applicantID;
    
        public virtual int ServiceLookupID
        {
            get { return _serviceLookupID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_serviceLookupID != value)
                    {
                        if (ServiceEntity != null && ServiceEntity.Id != value)
                        {
                            ServiceEntity = null;
                        }
                        _serviceLookupID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _serviceLookupID;
    
        public virtual System.DateTime ServiceDate
        {
            get;
            set;
        }
    
        public virtual bool IsHistory
        {
            get { return _isHistory; }
            set { _isHistory = value; }
        }
        private bool _isHistory = false;
    
        public virtual Nullable<int> RequestID
        {
            get { return _requestID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_requestID != value)
                    {
                        if (MedicalRequestEntity != null && MedicalRequestEntity.Id != value)
                        {
                            MedicalRequestEntity = null;
                        }
                        _requestID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _requestID;
    
        public virtual Nullable<System.DateTime> UpdateDate
        {
            get;
            set;
        }
    
        public virtual string UpdateUserName
        {
            get;
            set;
        }
    
        public virtual System.DateTime InsertDate
        {
            get;
            set;
        }
    
        public virtual string InsertUserName
        {
            get;
            set;
        }
    
        public virtual Nullable<short> DurationVisit
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual Applicant ApplicantEntity
        {
            get { return _applicantEntity; }
            set
            {
                if (!ReferenceEquals(_applicantEntity, value))
                {
                    var previousValue = _applicantEntity;
                    _applicantEntity = value;
                    FixupApplicantEntity(previousValue);
                }
            }
        }
        private Applicant _applicantEntity;
    
        public virtual Lookup ServiceEntity
        {
            get { return _serviceEntity; }
            set
            {
                if (!ReferenceEquals(_serviceEntity, value))
                {
                    var previousValue = _serviceEntity;
                    _serviceEntity = value;
                    FixupServiceEntity(previousValue);
                }
            }
        }
        private Lookup _serviceEntity;
    
        public virtual MedicalRequest MedicalRequestEntity
        {
            get { return _medicalRequestEntity; }
            set
            {
                if (!ReferenceEquals(_medicalRequestEntity, value))
                {
                    var previousValue = _medicalRequestEntity;
                    _medicalRequestEntity = value;
                    FixupMedicalRequestEntity(previousValue);
                }
            }
        }
        private MedicalRequest _medicalRequestEntity;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupApplicantEntity(Applicant previousValue)
        {
            if (previousValue != null && previousValue.Applicant_Services.Contains(this))
            {
                previousValue.Applicant_Services.Remove(this);
            }
    
            if (ApplicantEntity != null)
            {
                if (!ApplicantEntity.Applicant_Services.Contains(this))
                {
                    ApplicantEntity.Applicant_Services.Add(this);
                }
                if (ApplicantID != ApplicantEntity.Id)
                {
                    ApplicantID = ApplicantEntity.Id;
                }
            }
        }
    
        private void FixupServiceEntity(Lookup previousValue)
        {
            if (previousValue != null && previousValue.Applicant_Services.Contains(this))
            {
                previousValue.Applicant_Services.Remove(this);
            }
    
            if (ServiceEntity != null)
            {
                if (!ServiceEntity.Applicant_Services.Contains(this))
                {
                    ServiceEntity.Applicant_Services.Add(this);
                }
                if (ServiceLookupID != ServiceEntity.Id)
                {
                    ServiceLookupID = ServiceEntity.Id;
                }
            }
        }
    
        private void FixupMedicalRequestEntity(MedicalRequest previousValue)
        {
            if (previousValue != null && previousValue.Applicant_Services.Contains(this))
            {
                previousValue.Applicant_Services.Remove(this);
            }
    
            if (MedicalRequestEntity != null)
            {
                if (!MedicalRequestEntity.Applicant_Services.Contains(this))
                {
                    MedicalRequestEntity.Applicant_Services.Add(this);
                }
                if (RequestID != MedicalRequestEntity.Id)
                {
                    RequestID = MedicalRequestEntity.Id;
                }
            }
            else if (!_settingFK)
            {
                RequestID = null;
            }
        }

        #endregion
    }
}
