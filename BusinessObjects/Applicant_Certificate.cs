//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace CAOCertificate.BusinessObjects
{
    public partial class Applicant_Certificate
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual int CertificateID
        {
            get { return _certificateID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_certificateID != value)
                    {
                        if (CertificateEntity != null && CertificateEntity.Id != value)
                        {
                            CertificateEntity = null;
                        }
                        _certificateID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _certificateID;
    
        public virtual int ApplicantID
        {
            get { return _applicantID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_applicantID != value)
                    {
                        if (ApplicantEntity != null && ApplicantEntity.Id != value)
                        {
                            ApplicantEntity = null;
                        }
                        _applicantID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _applicantID;
    
        public virtual System.DateTime IssuanceDate
        {
            get;
            set;
        }
    
        public virtual byte CertificateType
        {
            get;
            set;
        }
    
        public virtual bool IsSystem
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> ExpireDate
        {
            get;
            set;
        }
    
        public virtual string UpdateUserName
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> UpdateDate
        {
            get;
            set;
        }
    
        public virtual string InsertUserName
        {
            get;
            set;
        }
    
        public virtual System.DateTime InsertDate
        {
            get;
            set;
        }
    
        public virtual Nullable<int> RequestID
        {
            get { return _requestID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_requestID != value)
                    {
                        if (RequestEntity != null && RequestEntity.Id != value)
                        {
                            RequestEntity = null;
                        }
                        _requestID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _requestID;
    
        public virtual Nullable<int> CertificateNumber
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual Certificate CertificateEntity
        {
            get { return _certificateEntity; }
            set
            {
                if (!ReferenceEquals(_certificateEntity, value))
                {
                    var previousValue = _certificateEntity;
                    _certificateEntity = value;
                    FixupCertificateEntity(previousValue);
                }
            }
        }
        private Certificate _certificateEntity;
    
        public virtual Applicant ApplicantEntity
        {
            get { return _applicantEntity; }
            set
            {
                if (!ReferenceEquals(_applicantEntity, value))
                {
                    var previousValue = _applicantEntity;
                    _applicantEntity = value;
                    FixupApplicantEntity(previousValue);
                }
            }
        }
        private Applicant _applicantEntity;
    
        public virtual Request RequestEntity
        {
            get { return _requestEntity; }
            set
            {
                if (!ReferenceEquals(_requestEntity, value))
                {
                    var previousValue = _requestEntity;
                    _requestEntity = value;
                    FixupRequestEntity(previousValue);
                }
            }
        }
        private Request _requestEntity;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupCertificateEntity(Certificate previousValue)
        {
            if (previousValue != null && previousValue.Applicant_Certificates.Contains(this))
            {
                previousValue.Applicant_Certificates.Remove(this);
            }
    
            if (CertificateEntity != null)
            {
                if (!CertificateEntity.Applicant_Certificates.Contains(this))
                {
                    CertificateEntity.Applicant_Certificates.Add(this);
                }
                if (CertificateID != CertificateEntity.Id)
                {
                    CertificateID = CertificateEntity.Id;
                }
            }
        }
    
        private void FixupApplicantEntity(Applicant previousValue)
        {
            if (previousValue != null && previousValue.Applicant_Certificates.Contains(this))
            {
                previousValue.Applicant_Certificates.Remove(this);
            }
    
            if (ApplicantEntity != null)
            {
                if (!ApplicantEntity.Applicant_Certificates.Contains(this))
                {
                    ApplicantEntity.Applicant_Certificates.Add(this);
                }
                if (ApplicantID != ApplicantEntity.Id)
                {
                    ApplicantID = ApplicantEntity.Id;
                }
            }
        }
    
        private void FixupRequestEntity(Request previousValue)
        {
            if (previousValue != null && previousValue.Applicant_Certificates.Contains(this))
            {
                previousValue.Applicant_Certificates.Remove(this);
            }
    
            if (RequestEntity != null)
            {
                if (!RequestEntity.Applicant_Certificates.Contains(this))
                {
                    RequestEntity.Applicant_Certificates.Add(this);
                }
                if (RequestID != RequestEntity.Id)
                {
                    RequestID = RequestEntity.Id;
                }
            }
            else if (!_settingFK)
            {
                RequestID = null;
            }
        }

        #endregion
    }
}
