//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace CAOCertificate.BusinessObjects
{
    public partial class EPaymentHistory
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual int OrderId
        {
            get;
            set;
        }
    
        public virtual string RequestKey
        {
            get;
            set;
        }
    
        public virtual decimal Amount
        {
            get;
            set;
        }
    
        public virtual int UserId
        {
            get;
            set;
        }
    
        public virtual int BankId
        {
            get { return _bankId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_bankId != value)
                    {
                        if (BankEntity != null && BankEntity.Id != value)
                        {
                            BankEntity = null;
                        }
                        _bankId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _bankId;
    
        public virtual Nullable<int> CAORequestId
        {
            get { return _cAORequestId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_cAORequestId != value)
                    {
                        if (RequestEntity != null && RequestEntity.Id != value)
                        {
                            RequestEntity = null;
                        }
                        _cAORequestId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _cAORequestId;
    
        public virtual string TrackCode
        {
            get;
            set;
        }
    
        public virtual string Description
        {
            get;
            set;
        }
    
        public virtual string InsertUserName
        {
            get;
            set;
        }
    
        public virtual System.DateTime InsertDate
        {
            get;
            set;
        }
    
        public virtual string UpdateUserName
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> UpdateDate
        {
            get;
            set;
        }
    
        public virtual Nullable<System.Guid> TaskInstanceID
        {
            get;
            set;
        }
    
        public virtual string ExtraInfo1
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual Bank BankEntity
        {
            get { return _bankEntity; }
            set
            {
                if (!ReferenceEquals(_bankEntity, value))
                {
                    var previousValue = _bankEntity;
                    _bankEntity = value;
                    FixupBankEntity(previousValue);
                }
            }
        }
        private Bank _bankEntity;
    
        public virtual ICollection<EPaymentStatus> EPaymentStatus
        {
            get
            {
                if (_ePaymentStatus == null)
                {
                    var newCollection = new FixupCollection<EPaymentStatus>();
                    newCollection.CollectionChanged += FixupEPaymentStatus;
                    _ePaymentStatus = newCollection;
                }
                return _ePaymentStatus;
            }
            set
            {
                if (!ReferenceEquals(_ePaymentStatus, value))
                {
                    var previousValue = _ePaymentStatus as FixupCollection<EPaymentStatus>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupEPaymentStatus;
                    }
                    _ePaymentStatus = value;
                    var newValue = value as FixupCollection<EPaymentStatus>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupEPaymentStatus;
                    }
                }
            }
        }
        private ICollection<EPaymentStatus> _ePaymentStatus;
    
        public virtual Request RequestEntity
        {
            get { return _requestEntity; }
            set
            {
                if (!ReferenceEquals(_requestEntity, value))
                {
                    var previousValue = _requestEntity;
                    _requestEntity = value;
                    FixupRequestEntity(previousValue);
                }
            }
        }
        private Request _requestEntity;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupBankEntity(Bank previousValue)
        {
            if (previousValue != null && previousValue.EPaymentHistory.Contains(this))
            {
                previousValue.EPaymentHistory.Remove(this);
            }
    
            if (BankEntity != null)
            {
                if (!BankEntity.EPaymentHistory.Contains(this))
                {
                    BankEntity.EPaymentHistory.Add(this);
                }
                if (BankId != BankEntity.Id)
                {
                    BankId = BankEntity.Id;
                }
            }
        }
    
        private void FixupRequestEntity(Request previousValue)
        {
            if (previousValue != null && previousValue.EPaymentHistories.Contains(this))
            {
                previousValue.EPaymentHistories.Remove(this);
            }
    
            if (RequestEntity != null)
            {
                if (!RequestEntity.EPaymentHistories.Contains(this))
                {
                    RequestEntity.EPaymentHistories.Add(this);
                }
                if (CAORequestId != RequestEntity.Id)
                {
                    CAORequestId = RequestEntity.Id;
                }
            }
            else if (!_settingFK)
            {
                CAORequestId = null;
            }
        }
    
        private void FixupEPaymentStatus(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (EPaymentStatus item in e.NewItems)
                {
                    item.EPaymentHistoryEntity = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (EPaymentStatus item in e.OldItems)
                {
                    if (ReferenceEquals(item.EPaymentHistoryEntity, this))
                    {
                        item.EPaymentHistoryEntity = null;
                    }
                }
            }
        }

        #endregion
    }
}
