//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace CAOCertificate.BusinessObjects
{
    public partial class CheckupFormValue
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual int CheckupFormId
        {
            get { return _checkupFormId; }
            set
            {
                if (_checkupFormId != value)
                {
                    if (CheckupFormEntity != null && CheckupFormEntity.Id != value)
                    {
                        CheckupFormEntity = null;
                    }
                    _checkupFormId = value;
                }
            }
        }
        private int _checkupFormId;
    
        public virtual int ItemLookupId
        {
            get { return _itemLookupId; }
            set
            {
                if (_itemLookupId != value)
                {
                    if (ItemLookupEntity != null && ItemLookupEntity.Id != value)
                    {
                        ItemLookupEntity = null;
                    }
                    _itemLookupId = value;
                }
            }
        }
        private int _itemLookupId;
    
        public virtual string ItemValue
        {
            get;
            set;
        }
    
        public virtual string InsertUserName
        {
            get;
            set;
        }
    
        public virtual System.DateTime InsertDate
        {
            get;
            set;
        }
    
        public virtual string UpdateUserName
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> UpdateDate
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual Lookup ItemLookupEntity
        {
            get { return _itemLookupEntity; }
            set
            {
                if (!ReferenceEquals(_itemLookupEntity, value))
                {
                    var previousValue = _itemLookupEntity;
                    _itemLookupEntity = value;
                    FixupItemLookupEntity(previousValue);
                }
            }
        }
        private Lookup _itemLookupEntity;
    
        public virtual CheckupForm CheckupFormEntity
        {
            get { return _checkupFormEntity; }
            set
            {
                if (!ReferenceEquals(_checkupFormEntity, value))
                {
                    var previousValue = _checkupFormEntity;
                    _checkupFormEntity = value;
                    FixupCheckupFormEntity(previousValue);
                }
            }
        }
        private CheckupForm _checkupFormEntity;

        #endregion
        #region Association Fixup
    
        private void FixupItemLookupEntity(Lookup previousValue)
        {
            if (previousValue != null && previousValue.CheckupFormValues.Contains(this))
            {
                previousValue.CheckupFormValues.Remove(this);
            }
    
            if (ItemLookupEntity != null)
            {
                if (!ItemLookupEntity.CheckupFormValues.Contains(this))
                {
                    ItemLookupEntity.CheckupFormValues.Add(this);
                }
                if (ItemLookupId != ItemLookupEntity.Id)
                {
                    ItemLookupId = ItemLookupEntity.Id;
                }
            }
        }
    
        private void FixupCheckupFormEntity(CheckupForm previousValue)
        {
            if (previousValue != null && previousValue.CheckupFormValues.Contains(this))
            {
                previousValue.CheckupFormValues.Remove(this);
            }
    
            if (CheckupFormEntity != null)
            {
                if (!CheckupFormEntity.CheckupFormValues.Contains(this))
                {
                    CheckupFormEntity.CheckupFormValues.Add(this);
                }
                if (CheckupFormId != CheckupFormEntity.Id)
                {
                    CheckupFormId = CheckupFormEntity.Id;
                }
            }
        }

        #endregion
    }
}
